@model IEnumerable<AuctionWebApp.Models.AuctionItemViewModel>

@{
    ViewData["Title"] = "Index";
}
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/main.js"></script>

<script type="text/javascript">
    await start();
</script>

<h1>Index</h1>
@if (User.Identity is { IsAuthenticated: false })
{
    <h1>authorize: false</h1>
}
else
{
    <h1>authorize: true</h1>
}

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Time
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CurrentPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartTime)
            </th>
            <th>
                <p>Status</p>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <p id=@item.Id value=@item.Id>@(item.Id)</p>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @*timer*@
                <div id=clock@(item.Id) class="countdown">
                <span class="hours countdown-time"></span>
                <span class="countdown-text">:</span>
                <span class="minutes countdown-time"></span>
                <span class="countdown-text">:</span>
                <span class="seconds countdown-time"></span>
                <span class="countdown-text"></span>
                </div>

                <script defer type="text/javascript">
                    ItemStatusRequest(@(item.Id))
                </script>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentPrice)
            </td>
            <td>
                @item.StartTime.ToLocalTime();
            </td>
            <td>
                @if (item.OnLive)
                  {
                  <p>LIVE</p>
                  }
                else if (item.OnWait)
                  {
                  <p>Waiting</p>
                  }
                  else if (!item.OnWait && !item.OnLive)
                  {
                  <p>Ended</p>
                  }
            </td>
            <td>
                @Html.ActionLink("Details", "AuctionItem", new { id=item.Id })
            </td>
        </tr>}
    </tbody>
</table>

